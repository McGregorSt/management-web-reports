{"version":3,"sources":["components/TopMenu.jsx","components/Charts.jsx","components/RightPanel.jsx","components/FooterSummary.jsx","components/App.jsx","App.js","serviceWorker.js","index.js"],"names":["IncomeType","income","handleIncomeType","topMenuHeader","className","style","display","Input","type","name","id","onChange","value","map","key","DateRange","this","props","handleDateFrom","handleDateTo","Button","color","onClick","handleClickRun","Component","TopMenu","Container","Row","Col","data","dateFrom","dateTo","Charts","console","log","length","incomeType","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","stroke","strokeWidth","activeDot","r","contentStyle","backgroundColor","RightPanel","reverseData","sort","a","b","IDCzas","displayedData","elm","commissionNet","Number","ProwNettoKasPL","ProwNettoTermPL","ProwNettoKasZagr","DataSesji","displayType","thousandSeparator","Math","round","Odsetki_Netto","Table","FooterBox","Card","cardTitle","cardSubtitle","cardText","CardBody","CardTitle","CardSubtitle","CardText","fontStyle","marginBottom","FooterSummary","state","activeTab","tab","setState","accounts","KlienciObrotKasowyPL","accountsYTD","ytd","numOfAcc","numOfAccNumber","numOfAccChange","numOfAccNumberYTD","numOfAccChangeYTD","assets","AktywaALL","assetsYTD","assetsValue","assetsValueNumber","assetsValueChange","assetsValueNumberYTD","assetsValueChangeYTD","clients","KlienciObrotAll","activeClients","activeClientsNumber","activeClientsChange","incomeTypeYTD","dataYTD","incomeTypeSum","reduce","acc","cur","incomeTypeSumYTD","incomeTypeSumNumber","incomeTypeSumNumberYTD","Nav","tabs","NavItem","NavLink","classnames","active","toggle","TabContent","TabPane","tabId","sm","toFixed","AppJSX","filteredData","YTD","event","target","preventDefault","dateFromCheck","dateToCheck","alert","includes","prev","filter","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77f40052.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Row, Col, Button, Input} from 'reactstrap';\r\n\r\n\r\nconst IncomeType = ({ income, handleIncomeType, topMenuHeader }) => {\r\n    \r\n    return(\r\n            <div>\r\n                <h5 \r\n                className='topMenuHeader' \r\n                style={{ display:  topMenuHeader ===  true ? 'block' : 'none'}}\r\n                >\r\n                Choose income type:\r\n                </h5>\r\n                <Input type=\"select\" name=\"select\" id=\"exampleSelect\" className=\"incomeType\" onChange={ handleIncomeType }>\r\n                    <option value='null'></option>\r\n                        { income.map( type => {\r\n                            return(\r\n                                <option key={ type } value={ type }>{ type }</option>\r\n                            )\r\n                        })}\r\n                </Input>\r\n                {/* <select name=\"incomeType\" className=\"incomeType\" onChange={ handleIncomeType }>\r\n                </select> */}\r\n            </div>\r\n    ) \r\n}\r\n\r\nclass DateRange extends Component {\r\nrender(){\r\n    return(\r\n        <div >\r\n            <h5 \r\n            className='topMenuHeader' \r\n            style={{ display:  this.props.topMenuHeader ? 'block' : 'none'}}\r\n            >\r\n            Choose date range for report:\r\n            </h5>\r\n            <div className='dates'>\r\n                <h6>\r\n                    <span>Start Date</span> \r\n                    <Input type='date' onChange={ this.props.handleDateFrom } className='inputDate' />\r\n                </h6>\r\n                <h6>\r\n                    <span>End Date</span> \r\n                    <Input type='date'  onChange={ this.props.handleDateTo } className='inputDate'/>\r\n                </h6>\r\n                <h6>\r\n                    <Button color=\"info\" onClick={ this.props.handleClickRun }>Run</Button>\r\n                </h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default class TopMenu extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className='topMenu'>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <IncomeType \r\n                            income={ ['All', 'Commission', 'Interests'] }\r\n                            handleIncomeType={ this.props.handleIncomeType }\r\n                            topMenuHeader={ this.props.topMenuHeader }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <DateRange \r\n                            data={ this.props.data} \r\n                            dateFrom={ this.props.dateFrom } \r\n                            dateTo={ this.props.dateTo } \r\n                            handleDateFrom={ this.props.handleDateFrom } \r\n                            handleDateTo={ this.props.handleDateTo }  \r\n                            topMenuHeader={ this.props.topMenuHeader }\r\n                            handleClickRun={ this.props.handleClickRun }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n  } from 'recharts'\r\n// import NumberFormat from 'react-number-format';\r\n\r\n\r\n// class CustomizedTooltip extends Component {\r\n//     render(){\r\n//         const dataToChart = this.props.data\r\n\r\n//         if(this.props.incomeType === 'Commission'){\r\n//             return(\r\n//                 <ul>\r\n//                     { dataToChart.map( elm => {\r\n//                        return (\r\n//                            <li> <NumberFormat value={ elm.ProwNettoKasPL } thousandSeparator=' ' /></li>\r\n//                        ) \r\n//                     })\r\n//                     }\r\n//                 </ul>\r\n//             )\r\n\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nexport default class Charts extends Component {\r\n\r\n    render(){\r\n        console.log(this.props.data)\r\n        // const dataToChart = this.props.data.map(elm => {\r\n        //     return elm\r\n        // })\r\n        \r\n        \r\n        if (this.props.data.length === 0 || this.props.incomeType === null){return null} \r\n            if(this.props.incomeType === null){\r\n                return(\r\n                    <div className='chart'>\r\n                        <LineChart width={650} height={385} data={ this.props.data }\r\n                            margin={{top: 15, right: 10, left: 10, bottom: 5}}>\r\n                            <XAxis dataKey=\"DataSesji\"/>\r\n                            <YAxis />\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            <Line type=\"monotone\" dataKey=\"\" stroke=\"#8884d8\" strokeWidth='3' activeDot={{r: 10}}/>\r\n                            <Line type=\"monotone\" dataKey=\"\" stroke=\"#82ca9d\" strokeWidth='3' />\r\n                        </LineChart>\r\n                    </div>\r\n                )\r\n            }\r\n            if(this.props.incomeType === 'Commission'){\r\n                return(\r\n                    <div className='chart'>\r\n                        <LineChart width={650} height={385} data={ this.props.data }\r\n                            margin={{top: 15, right: 10, left: 10, bottom: 5}}>\r\n                            <XAxis dataKey=\"DataSesji\" />\r\n                            <YAxis />\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <Tooltip dataKey='IDCzas' className='chartsTooltip' contentStyle={{ backgroundColor: 'black', color: 'white' }} \r\n                            \r\n                            />\r\n                            {/* <Legend display='none'/> */}\r\n                            <Line \r\n                            type=\"monotone\" \r\n                            dataKey=\"ProwNettoKasPL\"\r\n                            stroke=\"#758E4F\" \r\n                            strokeWidth='3' \r\n                            activeDot={{r: 10}}\r\n                            />\r\n                            <Line \r\n                            dataKey=\"ProwNettoTermPL\" \r\n                            stroke=\"#F6AE2D\" \r\n                            strokeWidth='3' \r\n                            />\r\n                            <Line \r\n                            dataKey=\"ProwNettoKasZagr\" \r\n                            stroke=\"#F26419\" \r\n                            strokeWidth='3' \r\n                            />\r\n                            {/* <Line type=\"monotone\" dataKey=\"ProwBruttoKasPL\" stroke=\"#82ca9d\" strokeWidth='3' /> */}\r\n                        </LineChart>\r\n                    </div>\r\n                )\r\n            }\r\n            if(this.props.incomeType === 'Interests'){\r\n                return(\r\n                    <div className='chart'>\r\n                        <LineChart width={650} height={385} data={ this.props.data }\r\n                            margin={{top: 15, right: 10, left: 10, bottom: 5}}>\r\n                            <XAxis dataKey=\"DataSesji\"/>\r\n                            <YAxis />\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <Tooltip contentStyle={{ backgroundColor: 'black', color: 'white' }}/>\r\n                            <Legend />\r\n                            <Line type=\"monotone\" dataKey=\"Odsetki_Netto\" stroke=\"#F26419\" strokeWidth='3' activeDot={{r: 10}}/>\r\n                            {/* <Line type=\"monotone\" dataKey=\"ProwBruttoKasPL\" stroke=\"#82ca9d\" strokeWidth='3' /> */}\r\n                        </LineChart>\r\n                    </div>\r\n                )\r\n            }\r\n            if(this.props.incomeType === 'All'){\r\n                return(\r\n                    <div className='chart'>\r\n                        <LineChart width={650} height={385} data={ this.props.data }\r\n                            margin={{top: 15, right: 10, left: 10, bottom: 5}}>\r\n                            <XAxis dataKey=\"DataSesji\"/>\r\n                            <YAxis />\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <Tooltip contentStyle={{ backgroundColor: 'black', color: 'white' }}/>\r\n                            <Legend />\r\n                            <Line type=\"monotone\" dataKey=\"Odsetki_Netto\" stroke=\"#F26419\" strokeWidth='3' activeDot={{r: 10}}/>\r\n                            <Line type=\"monotone\" dataKey=\"ProwNettoKasPL\" stroke=\"#758E4F\" strokeWidth='3' />\r\n                        </LineChart>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }","import React, { Component } from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\n\r\nexport default class RightPanel extends Component {\r\n\r\n    render(){\r\n        const reverseData = [...this.props.data].sort((a, b) => (b.IDCzas - a.IDCzas))\r\n        console.log('rev   ', reverseData);\r\n        \r\n        \r\n        const displayedData = reverseData.map( elm => {\r\n            \r\n            const commissionNet = Number(elm.ProwNettoKasPL) + Number(elm.ProwNettoTermPL) + Number(elm.ProwNettoKasZagr)\r\n            if (this.props.incomeType === 'Commission'){\r\n                return(\r\n                        <tr >\r\n                            <td> { elm.DataSesji } </td>\r\n                            <td className='rightPanelData'> <NumberFormat displayType='text' value={ commissionNet } thousandSeparator=' ' /> </td>\r\n                        </tr>\r\n                )\r\n            }\r\n            if (this.props.incomeType === 'Interests'){\r\n                return(\r\n                    <tr >\r\n                            <td> { elm.DataSesji } </td>\r\n                            <td className='rightPanelData'><NumberFormat displayType='text' value={ Math.round(elm.Odsetki_Netto) } thousandSeparator=' ' /> </td>\r\n                        </tr>\r\n                )\r\n            }\r\n            if (this.props.incomeType === 'All'){\r\n                return(\r\n                    <tr >\r\n                            <td> { elm.DataSesji } </td>\r\n                            <td className='rightPanelData'> <NumberFormat displayType='text' value={ Math.round(Number(elm.ProwNettoKasPL) + Number(elm.Odsetki_Netto)) } thousandSeparator=' ' /> </td>\r\n                        </tr>\r\n                )\r\n            }\r\n        })\r\n\r\n\r\n\r\n        if (this.props.data.length === 0 || this.props.incomeType === null){\r\n            return null\r\n        } else {\r\n        return(\r\n            <div className='panel'>\r\n                <Table >\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th className='rightPanelData'>{ this.props.incomeType === 'All' ? 'Commission & Interests' : this.props.incomeType } Value</th>\r\n                    </tr>\r\n                    </thead>\r\n                        { displayedData }\r\n                </Table>\r\n            </div>\r\n        )}\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\n\r\n\r\nclass FooterBox extends Component {\r\n    \r\n    render(){\r\n        const colorInPlus = '#9FAF90'\r\n        const colorInMinus = '#E2B1B1'\r\n        \r\n        if( this.props.className === 'footerBox 14'){\r\n            \r\n            return(\r\n                    // <div className='footerBox' >\r\n                        <Card  style={{ backgroundColor: '#4A92C9', color: '#EAEAEA'}} \r\n                                cardTitle={ this.props.cardTitle } \r\n                                cardSubtitle={ this.props.cardSubtitle } \r\n                                cardText={ this.props.cardText } \r\n                                handleIncomeType={ this.props.handleIncomeType }>\r\n                            <CardBody className='summaryCard' >\r\n                                <CardTitle className='cardTitle'>{ this.props.cardTitle }</CardTitle>\r\n                                <CardSubtitle className='cardSubtitle'>{ this.props.cardSubtitle }</CardSubtitle>\r\n                                <CardText style={{fontStyle: 'italic', marginBottom: '20px' }} > Cumulated in period </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    /* </div> */\r\n            )\r\n        }\r\n        else {\r\n            \r\n            return(\r\n                    // <div className='footerBox' >\r\n                        <Card  style={{ backgroundColor: this.props.cardText > 0 ? colorInPlus : colorInMinus}} \r\n                                cardTitle={ this.props.cardTitle } \r\n                                cardSubtitle={ this.props.cardSubtitle } \r\n                                cardText={ this.props.cardText } \r\n                                handleIncomeType={ this.props.handleIncomeType }>\r\n                            <CardBody className='summaryCard' >\r\n                                <CardTitle className='cardTitle'>{ this.props.cardTitle }</CardTitle>\r\n                                <CardSubtitle className='cardSubtitle'>{ this.props.cardSubtitle }</CardSubtitle>\r\n                                <CardText className='cardText' >\r\n                                \r\n                                    <span>Change in period:</span>\r\n                                        <CardSubtitle \r\n                                        className='cardText-cardSubtitle'>{ this.props.cardText > 0 ? '+' + this.props.cardText + '%': this.props.cardText + '%' }\r\n                                        </CardSubtitle>\r\n                                    \r\n                                \r\n                                \r\n                                </CardText>\r\n                                <CardText className='cardText' >  </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    /* </div> */\r\n            )\r\n        }\r\n         \r\n\r\n        }\r\n    }\r\n\r\nclass FooterBoxYTD extends Component {\r\n    \r\n    render(){\r\n        const colorInPlus = '#9FAF90'\r\n        const colorInMinus = '#E2B1B1'\r\n        \r\n        if(this.props.className === 'footerBox 14'){\r\n            \r\n            return(\r\n                    // <div className='footerBox' >\r\n                        <Card  style={{ backgroundColor: '#4A92C9', color: '#EAEAEA'}} \r\n                                cardTitle={ this.props.cardTitle } \r\n                                cardSubtitle={ this.props.cardSubtitle } \r\n                                cardText={ this.props.cardText } \r\n                                handleIncomeType={ this.props.handleIncomeType }>\r\n                            <CardBody className='summaryCard' >\r\n                                <CardTitle className='cardTitle'>{ this.props.cardTitle }</CardTitle>\r\n                                <CardSubtitle className='cardSubtitle'>{ this.props.cardSubtitle }</CardSubtitle>\r\n                                <CardText style={{fontStyle: 'italic', marginBottom: '20px' }} > Cumulated in YTD </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    // </div>\r\n            )\r\n        }\r\n        else {\r\n            \r\n            return(\r\n                    // <div className='footerBox' >\r\n                        <Card  style={{ backgroundColor: this.props.cardText > 0 ? colorInPlus : colorInMinus}} \r\n                                cardTitle={ this.props.cardTitle } \r\n                                cardSubtitle={ this.props.cardSubtitle } \r\n                                cardText={ this.props.cardText } \r\n                                handleIncomeType={ this.props.handleIncomeType }>\r\n                            <CardBody className='summaryCard' >\r\n                                <CardTitle className='cardTitle'>{ this.props.cardTitle }</CardTitle>\r\n                                <CardSubtitle className='cardSubtitle'>{ this.props.cardSubtitle }</CardSubtitle>\r\n                                <CardText className='cardText' >\r\n                                    <span>Change in period:</span>\r\n                                        <CardSubtitle \r\n                                            className='cardText-cardSubtitle'>{ this.props.cardText > 0 ? '+' + this.props.cardText + '%': this.props.cardText + '%' }\r\n                                        </CardSubtitle>\r\n                                </CardText>\r\n                                <CardText className='cardText' >  </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    // </div>\r\n            )\r\n        }\r\n         \r\n\r\n        }\r\n    }\r\n\r\nexport default class FooterSummary extends Component {\r\n    \r\n    state = {\r\n        activeTab: '1'\r\n      };\r\n\r\n      toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n          this.setState({\r\n            activeTab: tab\r\n          });\r\n        }\r\n      }\r\n    \r\n      render(){\r\n\r\n        // accounts\r\n            const accounts = this.props.data.map( elm => {\r\n                return elm.KlienciObrotKasowyPL * 13 + 212\r\n                })\r\n\r\n            const accountsYTD = this.props.ytd.map( elm => {\r\n                return elm.KlienciObrotKasowyPL * 13 + 212\r\n            })\r\n            \r\n                \r\n            const numOfAcc = accounts[0]\r\n            const numOfAccNumber = <NumberFormat displayType='text' value={ numOfAcc } thousandSeparator=' ' />\r\n            const numOfAccChange = (numOfAcc - accounts[accounts.length - 1]) / accounts[accounts.length - 1]\r\n            \r\n            const numOfAccNumberYTD = <NumberFormat displayType='text' value={ numOfAcc - accountsYTD[0] } thousandSeparator=' ' />\r\n            const numOfAccChangeYTD = (numOfAcc - accountsYTD[0]) / accountsYTD[0] *100\r\n\r\n            console.log('props  ', accountsYTD);\r\n            console.log('props2  ', numOfAcc);\r\n            \r\n\r\n            \r\n\r\n        // assets\r\n            const assets = this.props.data.map( elm => {\r\n                return elm.AktywaALL\r\n            })\r\n            const assetsYTD = this.props.ytd.map( elm => {\r\n                return elm.AktywaALL\r\n            })\r\n            \r\n            const assetsValue = assets[0]\r\n            const assetsValueNumber = <NumberFormat displayType='text' value={ assetsValue } thousandSeparator=' ' />\r\n            const assetsValueChange =  assetsValue / assets[assets.length - 1]\r\n            \r\n            const assetsValueNumberYTD = <NumberFormat displayType='text' value={ assetsValue - assetsYTD[0]} thousandSeparator=' ' />\r\n            const assetsValueChangeYTD =  (assetsValue - assetsYTD[0]) / assetsYTD[0] * 100\r\n        \r\n\r\n        // active clients\r\n            const clients = this.props.data.map( elm => {\r\n                return elm.KlienciObrotAll\r\n            })\r\n\r\n            const activeClients = clients[0]\r\n            // const activeClients = clients.reduce( (acc, cur) => (Number(acc) + Number(cur)), 0) / clients.length\r\n            const activeClientsNumber = <NumberFormat displayType='text' value={ activeClients } thousandSeparator=' ' />\r\n            const activeClientsChange = (activeClients - clients[clients.length - 1]) / activeClients * 100 \r\n        \r\n        // total income\r\n           const incomeType = this.props.data.map(elm => {\r\n               if (this.props.incomeType === 'Commission') {\r\n                   return elm.ProwNettoKasPL\r\n               }\r\n               if (this.props.incomeType === 'Interests') {\r\n                   return elm.Odsetki_Netto\r\n               }\r\n               if (this.props.incomeType === 'All') {\r\n                   return Number(elm.ProwNettoKasPL) + Number(elm.Odsetki_Netto)\r\n               }\r\n           })\r\n           const incomeTypeYTD = this.props.dataYTD.map(elm => {\r\n               if (this.props.incomeType === 'Commission') {\r\n                   return elm.ProwNettoKasPL\r\n               }\r\n               if (this.props.incomeType === 'Interests') {\r\n                   return elm.Odsetki_Netto\r\n               }\r\n               if (this.props.incomeType === 'All') {\r\n                   return Number(elm.ProwNettoKasPL) + Number(elm.Odsetki_Netto)\r\n               }\r\n           })\r\n            \r\n            const incomeTypeSum = incomeType.reduce((acc, cur) => (Number(acc) + Number(cur)), 0)\r\n            const incomeTypeSumYTD = incomeTypeYTD.reduce((acc, cur) => (Number(acc) + Number(cur)), 0)\r\n            \r\n            const incomeTypeSumNumber = <NumberFormat displayType='text' value={ incomeTypeSum } thousandSeparator=' ' />\r\n            const incomeTypeSumNumberYTD = <NumberFormat displayType='text' value={ incomeTypeSumYTD } thousandSeparator=' ' />\r\n            \r\n            \r\n            \r\n\r\n\r\n            \r\n          \r\n\r\n            if (this.props.data.length === 0 || this.props.incomeType === null){\r\n                return null\r\n            } else {\r\n\r\n            return(\r\n            <div className='tabMenu'>\r\n                    <div >\r\n                        <Nav tabs >\r\n                            <NavItem>\r\n                                <NavLink\r\n                                className={classnames({ active: this.state.activeTab === '1' })}\r\n                                onClick={() => { this.toggle('1'); }}\r\n                                >\r\n                                Daily Summary\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                className={classnames({ active: this.state.activeTab === '2' })}\r\n                                onClick={() => { this.toggle('2'); }}\r\n                                >\r\n                                Year To Date Summary\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </div>\r\n                    <div >\r\n                        <TabContent activeTab={this.state.activeTab} >\r\n                            <TabPane tabId=\"1\">\r\n                                <Row >\r\n                                    <div className='summaryContent'>\r\n                                        <Col sm=\"3\" className='footerBox 11'>\r\n                                            <FooterBox \r\n                                            data={ this.props.data } \r\n                                            className='footerBox 11' \r\n                                            cardTitle='Number of accounts:' \r\n                                            cardSubtitle={ numOfAccNumber } \r\n                                            cardText={ numOfAccChange.toFixed(2) } \r\n                                            />\r\n                                        </Col>\r\n                                        <Col sm=\"3\" className='footerBox 12'>\r\n                                            <FooterBox \r\n                                            data={ this.props.data } \r\n                                            className='footerBox 12' \r\n                                            cardTitle='Assets:' \r\n                                            cardSubtitle={ assetsValueNumber } \r\n                                            cardText={ assetsValueChange.toFixed(2) } \r\n                                            />\r\n                                        </Col>\r\n                                        <Col sm=\"3\" className='footerBox 13'>\r\n                                            <FooterBox \r\n                                            data={ this.props.data } \r\n                                            className='footerBox 13'\r\n                                            cardTitle='Active clients:' \r\n                                            cardSubtitle={ activeClientsNumber } \r\n                                            cardText={  activeClientsChange.toFixed(2) }\r\n                                            />\r\n                                        </Col>\r\n                                        <Col sm=\"3\" className='footerBox 14'>\r\n                                            <FooterBox \r\n                                            data={ this.props.data } \r\n                                            className='footerBox 14'\r\n                                            cardTitle={ this.props.incomeType === 'All' ? 'Commission & Interests:' : this.props.incomeType + ':'} \r\n                                            cardSubtitle={ incomeTypeSumNumber } \r\n                                            />\r\n                                        </Col>\r\n                                    </div>\r\n                                </Row>\r\n                            </TabPane>\r\n                            <TabPane tabId=\"2\">\r\n                                <Row>\r\n                                    <div className=\"summaryContent\">\r\n                                        <Col sm=\"3\" className='footerBox 11'>\r\n                                            <FooterBox\r\n                                            data={ this.props.data } \r\n                                            className='footerBox 11' \r\n                                            cardTitle='Vol change of accounts:' \r\n                                            cardSubtitle={ numOfAccNumberYTD } \r\n                                            cardText={ numOfAccChangeYTD.toFixed(2) } \r\n                                            />\r\n                                        </Col>\r\n                                        <Col sm=\"3\" className='footerBox 12'>\r\n                                            <FooterBox\r\n                                            data={ this.props.data } \r\n                                            className='footerBox 12' \r\n                                            cardTitle='Vol change of assets:' \r\n                                            cardSubtitle={ assetsValueNumberYTD } \r\n                                            cardText={ assetsValueChangeYTD.toFixed(2) } \r\n                                            />\r\n                                        </Col>\r\n                                        <Col sm=\"3\" className='footerBox 13'>\r\n                                            <FooterBox\r\n                                            data={ this.props.data } \r\n                                            className='footerBox 13' \r\n                                            cardTitle='Active clients YTD:' \r\n                                            cardSubtitle={ numOfAccNumber } \r\n                                            cardText={ numOfAccChange.toFixed(2) } \r\n                                            />\r\n                                        </Col>\r\n                                        <Col sm=\"3\" className='footerBox 14'>\r\n                                            <FooterBox\r\n                                            data={ this.props.data } \r\n                                            className='footerBox 14' \r\n                                            cardTitle={ this.props.incomeType === 'All' ? 'Commission & Interests:' : this.props.incomeType + ':' } \r\n                                            cardSubtitle={ incomeTypeSumNumberYTD } \r\n                                            />\r\n                                        </Col>\r\n                                    </div>\r\n                                </Row>\r\n                                \r\n                            </TabPane>\r\n                        </TabContent>\r\n                    </div>\r\n\r\n\r\n                    {/* <FooterBox data={ this.props.data } />\r\n                    <FooterBox data={ this.props.data } />\r\n                    <FooterBox data={ this.props.data } />\r\n                    <FooterBox data={ this.props.data } /> */}\r\n            \r\n            </div>\r\n        )\r\n                }\r\n    }\r\n      \r\n}","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n\r\nimport TopMenu from './TopMenu'\r\nimport Charts from './Charts';\r\nimport RightPanel from './RightPanel';\r\nimport FooterSummary from './FooterSummary';\r\n\r\n\r\n\r\n\r\nexport default class AppJSX extends Component {\r\n    state = {\r\n        dateFrom: '',\r\n        dateTo: '',\r\n        filteredData: [],\r\n        incomeType: null,\r\n        topMenuHeader: true,\r\n        YTD: [],\r\n    }\r\n    \r\n    \r\n    handleDateFrom = (event) => {\r\n        this.setState({ dateFrom: event.target.value })\r\n        // this.setState({ filteredData: this.props.data.filter(this.filtering)})\r\n    }\r\n    \r\n    handleDateTo = (event) => {\r\n        event.preventDefault()\r\n        this.setState({ dateTo: event.target.value })\r\n    \r\n            \r\n            \r\n        }\r\n        \r\n        handleIncomeType = (event) => {\r\n            this.setState({ incomeType: event.target.value })\r\n        }\r\n        \r\n    handleClickRun = (event) => {        \r\n        const dateFromCheck = this.props.data.map( elm => {\r\n            if(elm.DataSesji === this.state.dateFrom){ return true }\r\n        })\r\n        const dateToCheck = this.props.data.map( elm => {\r\n            if(elm.DataSesji === this.state.dateTo){ return true }\r\n        })\r\n        \r\n        \r\n        \r\n        // validate\r\n        if(this.state.incomeType === null) {\r\n            return alert('Choose income type')\r\n        }\r\n        else if (this.state.dateFrom >= this.state.dateTo) {\r\n            return alert('Choose correct dates \\nStart Date must be < End Date')\r\n            // return alert('Choose correct dates')\r\n        }\r\n        else if(!dateFromCheck.includes(true)){\r\n            return alert('Incorrect Start Date \\nChoose weekdays')\r\n        }\r\n        else if(!dateToCheck.includes(true)){\r\n            return alert('Incorrect End Date \\nChoose weekdays')\r\n        }\r\n        else if (this.state.topMenuHeader === true){\r\n            this.setState( prev => ({ topMenuHeader: !prev.topMenuHeader }))\r\n        } \r\n    \r\n        \r\n        this.setState({ filteredData: this.props.data.filter(\r\n            (elm) => {\r\n                console.log(elm.DataSesji)\r\n                return elm.DataSesji >= this.state.dateFrom && elm.DataSesji <= this.state.dateTo \r\n            }\r\n            ).sort((a, b) => (a.IDCzas - b.IDCzas))\r\n        })\r\n        this.setState({ YTD: this.props.data.filter(\r\n            (elm) => { \r\n                return elm.DataSesji === '2018-12-28' \r\n            }\r\n            )\r\n        })\r\n\r\n\r\n    }\r\n    \r\n    \r\n    render() {\r\n        // console.log('from ', this.state.dateFrom);\r\n        // console.log('to  ', this.state.dateTo);\r\n        // console.log('filtered  ', this.state.filteredData);\r\n        \r\n        // console.log(this.state.dateFrom.includes(this.props.data.DataSesji) ? 'includez' : 'not includezzz');\r\n        // this.props.data.forEach( (elm) => { return console.log(elm.DataSesji)})\r\n        \r\n        \r\n        return(\r\n            <div >\r\n                <Container className='main' >\r\n                    <Row>\r\n                        <Col className='col-topMenu'>\r\n                            <TopMenu data={ this.props.data } \r\n                            dateFrom={ this.state.dateFrom } \r\n                            dateTo={ this.state.dateTo } \r\n                            handleDateFrom={ this.handleDateFrom } \r\n                            handleDateTo={ this.handleDateTo } \r\n                            handleIncomeType={ this.handleIncomeType }\r\n                            topMenuHeader={ this.state.topMenuHeader }\r\n                            handleClickRun={ this.handleClickRun }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='content'>\r\n                        <Col className='col-chart'>\r\n                            <Charts \r\n                            data={this.state.filteredData} \r\n                            incomeType={ this.state.incomeType }\r\n                            />\r\n                        </Col>\r\n                        <Col className='col-rightPanel'>\r\n                            <RightPanel \r\n                            data={this.state.filteredData} \r\n                            incomeType={ this.state.incomeType }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className='col-footer'>\r\n                            <FooterSummary \r\n                            data={this.state.filteredData} \r\n                            incomeType={ this.state.incomeType }\r\n                            ytd={ this.state.YTD }\r\n                            dataYTD={ this.props.data }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//  pytania\r\n\r\n// 1. podział na komponenty\r\n// 2. export zmiennych?? \r\n// 3. charty\r\n// 4. jak wysłać na Gita\r\n\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport data from './db/app.json'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport AppJSX from './components/App'\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n\r\n    console.log(data);\r\n    \r\n    return (\r\n     <div >\r\n       <AppJSX data={ data } />\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}